function cv2tifs(y, f)
%CV2TIFS Decodes a TIFS2CV compressed image sequence.
%   Y = CV2TIFS(Y, F) decodes compressed sequence Y (a structure
%   generated by TIFS2CV) and creates a multiframe TIFF file F.
%
%   See also TIFS2CV.

%   Copyright 2002-2009 R. C. Gonzalez, R. E. Woods, and S. L. Eddins
%   From the book Digital Image Processing Using MATLAB, 2nd ed.,
%   Gatesmark Publishing, 2009.
%
%   Book web site: http://www.imageprocessingplace.com
%   Publisher web site: http://www.gatesmark.com/DIPUM2e.htm

% Get the number of frames, block size, and reconstruction quality.
fcnt = double(y.frames);
m = double(y.blksz);
q = double(y.quality);

% Reconstruct the first image in the sequence and store.
if q == 0
    r = double(huff2mat(y.video(1)));
else
    r = double(jpeg2im(y.video(1)));
end
imwrite(uint8(r), f, 'Compression', 'none', 'WriteMode', 'overwrite');

% Get the frame size and motion vectors.
fsz = size(r);
mvsz = [fsz/m 2 fcnt];
mv = int16(huff2mat(y.motion));
mv = reshape(mv, mvsz);

% For frames except the first, get a motion conpensated prediction
% residual and add to the proper reference subimages.
for i = 2:fcnt
    if q == 0
        pe = double(huff2mat(y.video(i)));
    else
        pe = double(jpeg2im(y.video(i)) - 255);
    end
    peC = im2col(pe, [m m], 'distinct');
    
    for col = 1:size(peC, 2)
        u = 1 + mod(m * (col - 1), fsz(1));
        v = 1 + m * floor((col - 1) * m / fsz(1));
        rx = u - mv(1 + floor((u - 1)/m), 1 + floor((v - 1)/m), ...
           1, i);
        ry = v - mv(1 + floor((u - 1)/m), 1 + floor((v - 1)/m), ...
           2, i);
        
        subimage = r(rx:rx + m - 1, ry:ry + m - 1);
        peC(:, col) = subimage(:) - peC(:, col);
    end

    r = col2im(double(uint16(peC)), [m m], fsz, 'distinct');
    imwrite(uint8(r), f, 'Compression', 'none', ...
        'WriteMode', 'append');
end
